{"version":3,"sources":["components/City.js","components/Cities.js","App.js","index.js"],"names":["City","state","renderCity","city","props","IM","ME","timezoneOffset","timezone","utc","require","dayjs","extend","sunrise","sys","format","sunset","iconURL","weather","icon","className","style","margin","name","src","alt","description","main","temp","feels_like","humidity","wind","speed","temp_min","temp_max","Fragment","this","Component","querystring","api","Cities","timestamp","Cookies","getJSON","cities","fetchWeatherData","units","parameters","appid","key","q","url","stringify","axios","get","getData","cityName","a","setDefaultCity","data_metric","data_imperial","date","city_ME","data","city_IM","setState","set","JSON","expires","renderCities","jsx","i","length","push","componentDidMount","type","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.373f50e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport dayjs from \"dayjs\";\n\nclass City extends Component {\n  state = {};\n\n  renderCity = () => {\n    const { city } = this.props;\n    const { IM, ME } = city;\n\n    const timezoneOffset = IM.timezone;\n\n    var utc = require(\"dayjs/plugin/utc\");\n    dayjs.extend(utc);\n\n    const sunrise = dayjs\n      .utc((IM.sys.sunrise + timezoneOffset) * 1000)\n      .format(\"h:mma\");\n\n    const sunset = dayjs\n      .utc((IM.sys.sunset + timezoneOffset) * 1000)\n      .format(\"h:mma\");\n\n    const iconURL = `http://openweathermap.org/img/w/${IM.weather[0].icon}.png`;\n\n    return (\n      <div\n        className=\"card bg-primary container\"\n        style={({ width: \"40rem\" }, { margin: \"2%\" })}\n      >\n        <div className=\"card-header\">\n          <h1 className=\"card-title text-left\">{city.name}</h1>\n          <div className=\"d-flex\">\n            <img src={iconURL} className=\"img-fluid\" alt=\"Responsive\"></img>\n            <h2 className=\"card-text text-left\">{IM.weather[0].description}</h2>\n          </div>\n\n          <div className=\"d-flex flex-wrap\">\n            <h1 className=\"card-text text-left\">{IM.main.temp}</h1>\n            <p className=\"card-text text-left\">˚F</p>\n\n            <h1 className=\"card-text text-left\"> / {ME.main.temp}</h1>\n            <p className=\"card-text text-left\">˚C</p>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 className=\"card-text text-left\">Feels like:</h4>\n              <div className=\"d-flex flex-wrap\">\n                <h4>{IM.main.feels_like}</h4>\n                <p className=\"card-text text-left\">˚F</p>\n                <h4>/ {ME.main.feels_like}</h4>\n                <p className=\"card-text text-left\">˚C</p>\n              </div>\n            </div>\n\n            <div className=\"col-6\">\n              <div className=\"d-flex justify-content-center flex-column flex-wrap\">\n                <div className=\"p-2\">\n                  <h5 className=\"card-text text-left\">Humidity:</h5>\n                  <h5 className=\"card-text text-left\">{IM.main.humidity}%</h5>\n                </div>\n                <div className=\"p-2\">\n                  <h5 className=\"card-text text-left\">Wind:</h5>\n                  <div className=\"d-flex flex-wrap\">\n                    <h5 className=\"card-text text-left\">{IM.wind.speed}</h5>\n                    <p className=\"card-text text-left\">mph</p>\n                    <h5 className=\"card-text text-left\">/ {ME.wind.speed}</h5>\n                    <p className=\"card-text text-left\">kmh</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer row\">\n          <div className=\"col sm-6 text-left\">\n            <h5 className=\"card-text text-left\">Low:</h5>\n            <div className=\"d-flex flex-wrap\">\n              <h5>{IM.main.temp_min}</h5>\n              <p className=\"card-text text-left\">˚F</p>\n              <h5>/ {ME.main.temp_min}</h5>\n              <p className=\"card-text text-left\">˚C</p>\n            </div>\n          </div>\n          <div className=\"col sm-6 text-left\">\n            <h5 className=\"card-text text-left\">High:</h5>\n            <div className=\"d-flex flex-wrap\">\n              <h5>{IM.main.temp_max}</h5>\n              <p className=\"card-text text-left\">˚F</p>\n              <h5>/ {ME.main.temp_max}</h5>\n              <p className=\"card-text text-left\">˚C</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer row\">\n          <div className=\"col sm-6 text-left\">\n            <h4 className=\"card-text\">Sunrise: {sunrise}</h4>\n          </div>\n          <div className=\"col sm-6 text-left\">\n            <h4 className=\"card-text\">Sunset: {sunset}</h4>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.renderCity()}</React.Fragment>;\n  }\n}\n\nexport default City;\n\n// <div className=\"card-body row\">\n//           <div className=\"col sm-6 text-left\">\n//             <div className=\"d-flex flex-wrap\">\n//               <div className=\"p-2\">\n//                 <h1 className=\"card-text\">{IM.main.temp}˚F</h1>\n//               </div>\n//               <div className=\"p-2\">\n//                 <h1 className=\"card-text\">{ME.main.temp}˚C</h1>\n//               </div>\n//             </div>\n\n//             <p className=\"card-text\">\n//               Feels like: {IM.main.feels_like}˚F / {ME.main.feels_like}˚C\n//             </p>\n//           </div>\n//           <div className=\"col sm-6 text-left\">\n//             <p className=\"card-text\">\n//               Precipitation: {IM.main.pressure}˚F / {ME.main.temp}˚C\n//             </p>\n//             <p className=\"card-text\">Humidity: {IM.main.humidity}%</p>\n//             <p className=\"card-text\">\n//               Wind: {IM.wind.speed}mph / {IM.wind.speed}km/h\n//             </p>\n//           </div>\n//         </div>\n","import React, { Component } from \"react\";\nimport City from \"./City\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport Cookies from \"js-cookie\";\n\nconst querystring = require(\"querystring\");\nconst api = require(\"../data//api.json\");\n\nclass Cities extends Component {\n  state = {\n    timestamp: \"\",\n    city: Cookies.getJSON(\"defaultCity\") || \"\",\n    cities: [\n      {\n        name: \"New York\",\n        ME: {},\n        IM: {},\n      },\n      {\n        name: \"Portland\",\n        ME: {},\n        IM: {},\n      },\n    ],\n  };\n\n  fetchWeatherData = (city, units) => {\n    // const city = this.state.cities[0].name;\n    // http://api.openweathermap.org/data/2.5/group?id=524901,703448,2643743&units=metric\n\n    // let query = \"\";\n    // cities.map((city, index) => {\n    //   query = query + city.name;\n    //   if (index !== cities.length - 1) {\n    //     query = query + \",\";\n    //   }\n    // });\n    const parameters = {\n      appid: api.key,\n      units: units,\n      q: city,\n    };\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?${querystring.stringify(\n      parameters\n    )}`;\n\n    return axios.get(url);\n  };\n\n  // call fetch data and persist response data\n  getData = async (cityName) => {\n    this.setDefaultCity(cityName);\n\n    const data_metric = await this.fetchWeatherData(cityName, \"metric\");\n    const data_imperial = await this.fetchWeatherData(cityName, \"imperial\");\n\n    const date = dayjs().format(\"MM-DD-YY h:mma\");\n\n    if (data_metric && data_imperial) {\n      let cities = [...this.state.cities];\n      let city = { ...cities[0] };\n      let city_ME = { ...cities[0].ME };\n      let city_IM = { ...cities[0].IM };\n\n      city_ME = data_metric.data;\n      city_IM = data_imperial.data;\n\n      city = { name: cityName, IM: city_IM, ME: city_ME };\n      cities[0] = city;\n      this.setState({\n        timestamp: date,\n        city: cityName,\n        cities,\n      });\n    }\n  };\n\n  setDefaultCity = (cityName) => {\n    Cookies.set(\"defaultCity\", JSON.stringify(cityName), { expires: 24 });\n  };\n\n  renderCities = () => {\n    // console.log(\"Cities state:\", this.state.cities[0].main);\n\n    let jsx = [];\n    for (let i = 0; i < this.state.cities.length; i++) {\n      if (this.state.cities[i].IM.main)\n        jsx.push(<City key={i} city={this.state.cities[i]} />);\n    }\n    return jsx;\n  };\n\n  componentDidMount = () => {\n    if (this.state.city === \"\") {\n      this.getData(\"New York\");\n    } else {\n      this.getData(this.state.city);\n    }\n  };\n\n  render() {\n    const { timestamp } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          {timestamp.length > 0 ? (\n            <h3 style={{ margin: \"2%\" }}>{this.state.timestamp}</h3>\n          ) : null}\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={() => this.getData(\"New York\")}\n            style={{ margin: \"2%\" }}\n          >\n            New York\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={() => this.getData(\"Portland\")}\n            style={{ margin: \"2%\" }}\n          >\n            Portland\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={() => this.getData(\"Tokyo\")}\n            style={{ margin: \"2%\" }}\n          >\n            Tokyo\n          </button>\n        </div>\n        {this.renderCities()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cities;\n","import React from \"react\";\nimport \"./App.css\";\nimport Cities from \"./components/Cities\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Cities />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}